{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Sidebar/index.tsx","webpack://gatsby-starter-default/./node_modules/react-feather/dist/icons/menu.js","webpack://gatsby-starter-default/./src/components/Layout/MdxLayout.tsx","webpack://gatsby-starter-default/./src/pages/docs/spanner-dapp.mdx"],"names":["SideBar","styled","theme","bg3","bg2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Menu","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","displayName","HamburgerWrapper","DocsGrid","mediaWidth","upToSmall","DesktopWrapper","MobileWrapper","IconWrapper","primary1","SidebarCategory","SidebarSubCategory","SidebarItem","text1","nested","getNavItems","navData","navMap","useMemo","navDataMap","allMdx","nodes","forEach","node","frontmatter","path","pathName","split","reverse","navMeta","map","category","index","categoryItem","includes","to","title","subcategory","items","item","DesktopDocNav","style","padding","useStyles","makeStyles","list","fullList","MobileDocNav","React","isOpen","setIsOpen","useContext","ThemeContext","toggleDrawer","open","event","type","onClick","white","Drawer","anchor","onClose","DocNav","isMobile","useMedia","useStaticQuery","MdxLayout","children","Layout","siteTitle","fixed","withBorder","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-docs-spanner-dapp-mdx-7cb53365c368aadc9b55.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const SideBar = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  height: 100%;\n  width: 30vw;\n  position: fixed;\n  overflow-y: scroll;\n  top: 0;\n  left: 0;\n  padding-top: 80px;\n  border: 1px solid ${({ theme }) => theme.bg3};\n  background-color: ${({ theme }) => theme.bg2};\n`\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar Menu = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"12\",\n    x2: \"21\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"6\",\n    x2: \"21\",\n    y2: \"6\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"18\",\n    x2: \"21\",\n    y2: \"18\"\n  }));\n});\nMenu.displayName = 'Menu';\nexport default Menu;","import { Drawer, makeStyles } from \"@material-ui/core\"\nimport Header from \"components/header\"\nimport { SLink } from \"components/Link\"\nimport { SideBar } from \"components/Sidebar\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React, { useContext, useMemo } from \"react\"\nimport { Menu } from \"react-feather\"\nimport { useMedia } from \"react-use\"\nimport styled, { ThemeContext } from \"styled-components\"\nimport Layout from \".\"\nimport navMeta from \"../Navbar/docnav.json\"\nimport { DocsContentSection } from \"../Wrapper\"\ninterface FrontMatter {\n  title: string | null\n  path: string | null\n  category: string | null\n  sub_category: string | null\n}\n\ninterface FrontMatters {\n  frontmatter: FrontMatter\n}\n\ninterface Nodes {\n  nodes: FrontMatters[]\n}\n\ninterface AllMdx {\n  allMdx: Nodes\n}\n\ninterface NavDataMap {\n  [key: string]: FrontMatter\n}\n\nconst HamburgerWrapper = styled.div`\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n  :active {\n    opacity: 0.9;\n  }\n`\n\nconst DocsGrid = styled.div`\n  display: grid;\n  width: 100vw;\n  height: 100vh;\n  grid-template-columns: 30vw auto;\n  grid-column-gap: 5vw;\n  grid-row-gap: 1rem;\n  justify-content: flex-start;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n  display: flex;\n  `};\n`\n\nconst DesktopWrapper = styled.div`\n  display: initial;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n`};\n`\n\nconst MobileWrapper = styled.div`\n  display: none;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: initial;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n`};\n`\n\nconst IconWrapper = styled.div`\n  border: 1 solid transparent;\n  border-radius: 4px;\n  padding: 0.35rem;\n  background: ${({ theme }) => theme.primary1};\n`\n\nconst SidebarCategory = styled.p`\n  text-align: left;\n  font-family: \"Lato\", \"Roboto\", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: 0.7px;\n  color: #707070;\n  word-spacing: 0.5rem;\n`\n\nconst SidebarSubCategory = styled.p`\n  text-align: left;\n  font-family: \"Lato\", \"Roboto\", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: 0.7px;\n  color: #707070;\n  word-spacing: 0.5rem;\n`\n\nconst SidebarItem = styled.p<{ nested?: boolean }>`\n  text-align: left;\n  font-family: \"Lato\", \"Roboto\", sans-serif;\n  font-size: 14px;\n  font-weight: bold;\n  letter-spacing: 0.28px;\n  color: ${({ theme }) => theme.text1};\n  opacity: 1;\n  padding-left: ${({ nested }) => (nested ? \"1rem\" : \"0\")};\n`\n\nfunction getNavItems(navData: AllMdx) {\n  // Creating a map for access to each link's info\n  const navMap = useMemo(() => {\n    const navDataMap: NavDataMap = {}\n    navData.allMdx.nodes.forEach(node => {\n      if (node.frontmatter.path) {\n        const pathName = node.frontmatter.path.split(\"/\").reverse()[0]\n        navDataMap[pathName] = node.frontmatter\n      }\n    })\n    return navDataMap\n  }, [navData])\n\n  return (\n    <>\n      {Object.keys(navMeta.docs).map((category, index) => (\n        <>\n          <SidebarCategory key={index}>{category}</SidebarCategory>\n          {navMeta.docs[category].map((categoryItem, index) => {\n            if (typeof categoryItem === \"string\") {\n              if (Object.keys(navMap).includes(categoryItem)) {\n                return (\n                  <div key={index}>\n                    {navMap[categoryItem].path && (\n                      <SLink to={navMap[categoryItem].path as string}>\n                        <SidebarItem key={navMap[categoryItem].title}>\n                          {navMap[categoryItem].title}\n                        </SidebarItem>\n                      </SLink>\n                    )}\n                  </div>\n                )\n              } else {\n                return null\n              }\n            } else if (typeof categoryItem === \"object\") {\n              return (\n                <div key={index}>\n                  <SidebarSubCategory>\n                    {categoryItem.subcategory}\n                  </SidebarSubCategory>\n                  {categoryItem.items.map(item => {\n                    if (Object.keys(navMap).includes(item)) {\n                      return (\n                        <div key={navMap[item].title}>\n                          {navMap[item].path && (\n                            <SLink to={navMap[item].path as string}>\n                              <SidebarItem\n                                key={navMap[item].title}\n                                nested={true}\n                              >\n                                {navMap[item].title}\n                              </SidebarItem>\n                            </SLink>\n                          )}\n                        </div>\n                      )\n                    } else {\n                      return null\n                    }\n                  })}\n                </div>\n              )\n            } else {\n              return null\n            }\n          })}\n        </>\n      ))}\n    </>\n  )\n}\n\nfunction DesktopDocNav({ navData }: { navData: AllMdx }) {\n  return (\n    <>\n      <SideBar>\n        <div style={{ padding: \"0 3rem\" }}>{getNavItems(navData)}</div>\n      </SideBar>\n    </>\n  )\n}\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n})\n\nfunction MobileDocNav({ navData }: { navData: AllMdx }) {\n  const classes = useStyles()\n  const [isOpen, setIsOpen] = React.useState<boolean>(false)\n  const theme = useContext(ThemeContext)\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event.type === \"keydown\" &&\n      ((event as React.KeyboardEvent).key === \"Tab\" ||\n        (event as React.KeyboardEvent).key === \"Shift\")\n    ) {\n      return\n    }\n    setIsOpen(open)\n  }\n\n  return (\n    <>\n      <HamburgerWrapper onClick={toggleDrawer(true)}>\n        <IconWrapper>\n          <Menu size={24} color={theme.white} />\n        </IconWrapper>\n      </HamburgerWrapper>\n      <Drawer anchor={\"right\"} open={isOpen} onClose={toggleDrawer(false)}>\n        <div style={{ padding: \"1rem 2.5rem\" }}>{getNavItems(navData)}</div>\n      </Drawer>\n    </>\n  )\n}\n\nfunction DocNav() {\n  const isMobile = useMedia(\"(max-width: 720px)\")\n  const navData = useStaticQuery<AllMdx>(graphql`\n    query GetMdxInfo {\n      allMdx {\n        nodes {\n          frontmatter {\n            title\n            path\n            category\n            sub_category\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {!isMobile ? (\n        <DesktopWrapper>\n          <DesktopDocNav navData={navData} />\n        </DesktopWrapper>\n      ) : (\n        <MobileWrapper>\n          <MobileDocNav navData={navData} />\n        </MobileWrapper>\n      )}\n    </>\n  )\n}\n\nexport default function MdxLayout({ children }) {\n  return (\n    <Layout>\n      <Header siteTitle={`Spanner Protocol`} fixed={true} withBorder={true} />\n      <DocsGrid>\n        <DocNav />\n        <DocsContentSection>{children}</DocsContentSection>\n      </DocsGrid>\n    </Layout>\n  )\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ashern/projects/spanner/spanner-website/src/components/Layout/MdxLayout.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Overview of Spanner's Dapp`}</h1>\n    <p>{`Links to Spanner's DApp will be made available here after its official launch.`}</p>\n    <h2>{`What's available?`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Bridge - Move tokens between Spanner and Ethereum`}</li>\n      <li parentName=\"ul\">{`DeFi`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`DEX - Swap project tokens`}</li>\n          <li parentName=\"ul\">{`Liquidity Pools - Provide Liquidity to start earning transaction fees`}</li>\n          <li parentName=\"ul\">{`Yield Farming - Use your Liquidity Pool Tokens to farm more yield`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Project Discovery - Checkout all the projects on Spanner`}</li>\n      <li parentName=\"ul\">{`BulletTrain - Start participating in early project community growth capmaigns to earn rewards by helping new projects`}</li>\n    </ul>\n    <h2>{`Getting Started`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Use Bridge to start moving funds into Spanner`}</li>\n      <li parentName=\"ol\">{`Use Dex to Swap the token you want`}</li>\n      <li parentName=\"ol\">{`Participate in the following to earn project tokens: Liquidity Pools, Yield Farming or BulletTrain`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}