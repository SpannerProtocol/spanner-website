{"version":3,"sources":["webpack://gatsby-starter-default/./node_modules/react-feather/dist/icons/menu.js","webpack://gatsby-starter-default/./src/components/Layout/MdxLayout.tsx","webpack://gatsby-starter-default/./src/pages/docs/architecture.mdx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Menu","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","displayName","HamburgerWrapper","styled","DocsGrid","theme","mediaWidth","upToSmall","DesktopWrapper","MobileWrapper","IconWrapper","primary1","getNavItems","navData","navMap","useMemo","navDataMap","allMdx","nodes","forEach","node","frontmatter","path","pathName","split","reverse","navMeta","map","category","index","fontSize","padding","categoryItem","includes","to","Text","title","subcategory","items","item","DesktopDocNav","DocNav","isMobile","useMedia","useStaticQuery","MobileDocNav","useStyles","makeStyles","list","fullList","React","isOpen","setIsOpen","useContext","ThemeContext","toggleDrawer","open","event","type","onClick","white","Drawer","anchor","onClose","style","MdxLayout","children","Layout","overflow","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-docs-architecture-mdx-4840bae039b3fb5330fa.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar Menu = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"12\",\n    x2: \"21\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"6\",\n    x2: \"21\",\n    y2: \"6\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"18\",\n    x2: \"21\",\n    y2: \"18\"\n  }));\n});\nMenu.displayName = 'Menu';\nexport default Menu;","import { Drawer, makeStyles } from \"@material-ui/core\"\nimport { SLink } from \"components/Link\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React, { useContext, useMemo } from \"react\"\nimport { Menu } from \"react-feather\"\nimport { useMedia } from \"react-use\"\nimport styled, { ThemeContext } from \"styled-components\"\nimport Layout from \".\"\nimport navMeta from \"../Navbar/docnav.json\"\nimport { HeavyText, Text } from \"../Text\"\nimport { ContentSection, ContentWrapper } from \"../Wrapper\"\n\ninterface FrontMatter {\n  title: string | null\n  path: string | null\n  category: string | null\n  sub_category: string | null\n}\n\ninterface FrontMatters {\n  frontmatter: FrontMatter\n}\n\ninterface Nodes {\n  nodes: FrontMatters[]\n}\n\ninterface AllMdx {\n  allMdx: Nodes\n}\n\ninterface NavDataMap {\n  [key: string]: FrontMatter\n}\n\nconst HamburgerWrapper = styled.div`\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n  :active {\n    opacity: 0.9;\n  }\n`\n\nconst DocsGrid = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: min(180px) auto;\n  grid-column-gap: 1rem;\n  grid-row-gap: 1rem;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n  display: flex;\n  `};\n`\n\nconst DesktopWrapper = styled.div`\n  display: initial;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n`};\n`\n\nconst MobileWrapper = styled.div`\n  display: none;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: initial;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n`};\n`\n\nconst IconWrapper = styled.div`\n  border: 1 solid transparent;\n  border-radius: 4px;\n  padding: 0.35rem;\n  background: ${({ theme }) => theme.primary1};\n`\n\nfunction getNavItems(navData: AllMdx) {\n  // Creating a map for access to each link's info\n  const navMap = useMemo(() => {\n    const navDataMap: NavDataMap = {}\n    navData.allMdx.nodes.forEach(node => {\n      if (node.frontmatter.path) {\n        const pathName = node.frontmatter.path.split(\"/\").reverse()[0]\n        navDataMap[pathName] = node.frontmatter\n      }\n    })\n    return navDataMap\n  }, [navData])\n\n  return (\n    <>\n      {Object.keys(navMeta.docs).map((category, index) => (\n        <>\n          <HeavyText key={index} fontSize=\"20px\" padding=\"0.5rem 0\">\n            {category}\n          </HeavyText>\n          {navMeta.docs[category].map(categoryItem => {\n            if (typeof categoryItem === \"string\") {\n              if (Object.keys(navMap).includes(categoryItem)) {\n                return (\n                  <>\n                    {navMap[categoryItem].path && (\n                      <SLink to={navMap[categoryItem].path as string}>\n                        <Text\n                          key={navMap[categoryItem].title}\n                          padding=\"0.15rem 0\"\n                        >\n                          {navMap[categoryItem].title}\n                        </Text>\n                      </SLink>\n                    )}\n                  </>\n                )\n              } else {\n                return null\n              }\n            } else if (typeof categoryItem === \"object\") {\n              return (\n                <>\n                  <HeavyText fontSize=\"16px\" padding=\"0.5rem 0\">\n                    {categoryItem.subcategory}\n                  </HeavyText>\n                  {categoryItem.items.map(item => {\n                    if (Object.keys(navMap).includes(item)) {\n                      return (\n                        <>\n                          {navMap[item].path && (\n                            <SLink to={navMap[item].path as string}>\n                              <Text\n                                key={navMap[item].title}\n                                padding=\"0.15rem 0\"\n                              >\n                                {navMap[item].title}\n                              </Text>\n                            </SLink>\n                          )}\n                        </>\n                      )\n                    } else {\n                      return null\n                    }\n                  })}\n                </>\n              )\n            } else {\n              return null\n            }\n          })}\n        </>\n      ))}\n    </>\n  )\n}\n\nfunction DesktopDocNav({ navData }: { navData: AllMdx }) {\n  return <>{getNavItems(navData)}</>\n}\n\nfunction DocNav() {\n  const isMobile = useMedia(\"(max-width: 720px)\")\n  const navData = useStaticQuery<AllMdx>(graphql`\n    query GetMdxInfo {\n      allMdx {\n        nodes {\n          frontmatter {\n            title\n            path\n            category\n            sub_category\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {!isMobile ? (\n        <DesktopWrapper>\n          <DesktopDocNav navData={navData} />\n        </DesktopWrapper>\n      ) : (\n        <MobileWrapper>\n          <MobileDocNav navData={navData} />\n        </MobileWrapper>\n      )}\n    </>\n  )\n}\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n})\n\nfunction MobileDocNav({ navData }: { navData: AllMdx }) {\n  const classes = useStyles()\n  const [isOpen, setIsOpen] = React.useState<boolean>(false)\n  const theme = useContext(ThemeContext)\n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event.type === \"keydown\" &&\n      ((event as React.KeyboardEvent).key === \"Tab\" ||\n        (event as React.KeyboardEvent).key === \"Shift\")\n    ) {\n      return\n    }\n    setIsOpen(open)\n  }\n\n  return (\n    <>\n      <HamburgerWrapper onClick={toggleDrawer(true)}>\n        <IconWrapper>\n          <Menu size={24} color={theme.white} />\n        </IconWrapper>\n      </HamburgerWrapper>\n      <Drawer anchor={\"right\"} open={isOpen} onClose={toggleDrawer(false)}>\n        <div style={{ padding: \"1rem\" }}>{getNavItems(navData)}</div>\n      </Drawer>\n    </>\n  )\n}\n\nexport default function MdxLayout({ children }) {\n  return (\n    <Layout>\n      <ContentWrapper>\n        <DocsGrid>\n          <DocNav />\n          <ContentSection style={{ overflow: \"scroll\" }}>\n            {children}\n          </ContentSection>\n        </DocsGrid>\n      </ContentWrapper>\n    </Layout>\n  )\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ashern/projects/spanner/spanner-website/src/components/Layout/MdxLayout.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://spannerprotocol.medium.com/spanner-architecture-explained-55655b8d0ab4\"\n      }}>{`here`}</a>{` is a good explainer of Spanner Protocol high-level architecture. `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}